{"ast":null,"code":"import _objectSpread from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport decode from 'jwt-decode';\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService(domain) {\n    _classCallCheck(this, AuthService);\n\n    this.domain = 'http://172.18.24.113:3000'; //  this.domain = domain || 'http://172.18.0.135:8004'\n\n    this.fetch = this.fetch.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(username, password) {\n      var _this = this;\n\n      var programid = 147;\n      return this.fetch(\"\".concat(this.domain, \"/login\"), {\n        method: 'POST',\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          programid: programid\n        })\n      }).then(function (res) {\n        if (res.accessapp === true) {\n          _this.setToken(res.token); // this.setAccess(res.accessmenu)\n\n\n          localStorage.setItem('accessmenu', JSON.stringify(res.accessmenu));\n          localStorage.setItem('access', res.access);\n          return Promise.resolve(res);\n        } else {\n          return Promise.resolve(res);\n        }\n      });\n    }\n  }, {\n    key: \"loggedIn\",\n    value: function loggedIn() {\n      // Checks if there is a saved token and it's still valid\n      var token = this.getToken();\n      return !!token && !this.isTokenExpired(token); // handwaiving here\n    }\n  }, {\n    key: \"isTokenExpired\",\n    value: function isTokenExpired(token) {\n      try {\n        var decoded = decode(token);\n\n        if (decoded.exp < Date.now() / 1000) {\n          localStorage.removeItem('id_token');\n          localStorage.removeItem('access');\n          localStorage.removeItem('accessmenu');\n          return true;\n        } else {\n          return false;\n        }\n      } catch (err) {\n        return false;\n      }\n    }\n  }, {\n    key: \"getAccess\",\n    value: function getAccess() {\n      // Retrieves the user token from localStorage\n      if (typeof localStorage.getItem('accessmenu') == \"object\") {\n        return 0;\n      } else {\n        return localStorage.getItem('accessmenu');\n      }\n    }\n  }, {\n    key: \"getAccessadmin\",\n    value: function getAccessadmin() {\n      // Retrieves the user token from localStorage\n      if (typeof localStorage.getItem('access') == \"object\") {\n        return 0;\n      } else {\n        return localStorage.getItem('access');\n      }\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(idToken) {\n      // Saves user token to localStorage\n      localStorage.setItem('id_token', idToken);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      // Retrieves the user token from localStorage\n      return localStorage.getItem('id_token');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('access');\n      localStorage.removeItem('accessmenu');\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile() {\n      return decode(this.getToken());\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x, _x2) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (url, options) {\n      // performs api calls sending the required authentication headers\n      var headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      };\n\n      if (this.loggedIn()) {\n        headers['Authorization'] = 'Bearer ' + this.getToken();\n      }\n\n      return fetch(url, _objectSpread({\n        headers: headers\n      }, options)).then(this._checkStatus).then(function (response) {\n        return response.json();\n      });\n    })\n  }, {\n    key: \"_checkStatus\",\n    value: function _checkStatus(response) {\n      // raises an error in case response status is not a success\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      } else {\n        var error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport { AuthService as default };","map":{"version":3,"sources":["D:\\Work_Project\\ReactJs\\NewIncentive2020\\src\\components\\authlogin\\AuthService.js"],"names":["decode","AuthService","domain","fetch","bind","login","logout","getProfile","username","password","programid","method","body","JSON","stringify","then","res","accessapp","setToken","token","localStorage","setItem","accessmenu","access","Promise","resolve","getToken","isTokenExpired","decoded","exp","Date","now","removeItem","err","getItem","idToken","url","options","headers","loggedIn","_checkStatus","response","json","status","error","Error","statusText"],"mappings":"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","sourcesContent":["import decode from 'jwt-decode';\r\nexport default class AuthService {\r\n    constructor(domain) {\r\n        this.domain = 'http://172.18.24.113:3000'\r\n        //  this.domain = domain || 'http://172.18.0.135:8004'\r\n        this.fetch = this.fetch.bind(this)\r\n        this.login = this.login.bind(this)\r\n        this.logout = this.logout.bind(this)\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n    login(username, password) {\r\n        const programid = 147;\r\n        return this.fetch(`${this.domain}/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n                programid,\r\n            })\r\n        }).then(res => {\r\n\r\n            if(res.accessapp===true){\r\n                this.setToken(res.token)\r\n                // this.setAccess(res.accessmenu)\r\n                localStorage.setItem('accessmenu',JSON.stringify(res.accessmenu)) \r\n                localStorage.setItem('access',(res.access)) \r\n\r\n                return Promise.resolve(res);\r\n            }else{\r\n                return Promise.resolve(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    loggedIn() {\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken()\r\n        return !!token && !this.isTokenExpired(token) // handwaiving here\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                localStorage.removeItem('id_token');\r\n                localStorage.removeItem('access');\r\n                localStorage.removeItem('accessmenu');\r\n                return true;\r\n            }\r\n            else{\r\n    \r\n            return false;\r\n            }\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n   \r\n    getAccess() {\r\n        // Retrieves the user token from localStorage\r\n       \r\n        if (typeof localStorage.getItem('accessmenu') == \"object\" ) {\r\n         \r\n            return 0\r\n        }else{\r\n      \r\n            return localStorage.getItem('accessmenu')\r\n        }\r\n        \r\n    }\r\n\r\n    getAccessadmin() {\r\n        // Retrieves the user token from localStorage\r\n       \r\n        if (typeof localStorage.getItem('access') == \"object\" ) {\r\n         \r\n            return 0\r\n        }else{\r\n      \r\n            return localStorage.getItem('access')\r\n        }\r\n        \r\n    }\r\n\r\n    setToken(idToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('access');\r\n        localStorage.removeItem('accessmenu');\r\n    }\r\n\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n\r\n    fetch(url, options) {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n            .then(this._checkStatus)\r\n            .then(response => response.json())\r\n    }\r\n    _checkStatus(response) {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response\r\n        } else {\r\n            var error = new Error(response.statusText)\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}