{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Work_Project\\\\ReactJs\\\\NewIncentive2020\\\\src\\\\components\\\\settingsys\\\\type.tsx\";\nimport * as React from 'react';\nimport JqxGrid, { jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\nimport \"jqwidgets-scripts/jqwidgets/styles/jqx.base.css\";\nimport \"jqwidgets-scripts/jqwidgets/styles/jqx.material-purple.css\";\nimport \"jqwidgets-scripts/jqwidgets/styles/jqx.metrodark.css\";\n\nvar Type =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Type, _React$PureComponent);\n\n  function Type() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Type);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Type)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.myGrid = React.createRef();\n    return _this;\n  }\n\n  _createClass(Type, [{\n    key: \"render\",\n    value: function render() {\n      // const imagerenderer = (row: number, datafield: string, value: string): string => {\n      //     return '<img style=\"margin-left: 5px;\" alt=\"img null\" height=\"100%\" width=\"100%\" src=\"' + value + '\"/>';\n      // };\n      var data = this.props.Adata;\n      var source = {\n        datafields: [{\n          name: '_id',\n          type: 'string'\n        }, {\n          name: 'type',\n          type: 'string'\n        }],\n        datatype: 'array',\n        localdata: data\n      };\n      var columns = [{\n        text: 'length',\n        datafield: 'leng',\n        width: 55\n      }, {\n        text: 'volumn',\n        datafield: 'volumn',\n        align: 'center',\n        width: 200\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(JqxGrid //rowsheight={60}\n      // @ts-ignore\n      , {\n        ref: this.myGrid,\n        filterable: true,\n        statusbarheight: 30,\n        showaggregates: true,\n        selectionmode: 'singlecell',\n        theme: \"metrodark\",\n        pageable: true,\n        pagesize: 20,\n        pagesizeoptions: ['10', '20', '30', '50', '100'],\n        columnsreorder: true,\n        showfilterrow: true,\n        height: 700,\n        width: '100%',\n        source: new jqx.dataAdapter(source),\n        columns: columns,\n        columnsresize: true,\n        sortable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Type;\n}(React.PureComponent);\n\nexport default Type;","map":{"version":3,"sources":["D:\\Work_Project\\ReactJs\\NewIncentive2020\\src\\components\\settingsys\\type.tsx"],"names":["React","JqxGrid","jqx","Type","myGrid","createRef","data","props","Adata","source","datafields","name","type","datatype","localdata","columns","text","datafield","width","align","dataAdapter","PureComponent"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,IAA8BC,GAA9B,QAAyC,+CAAzC;AACA,OAAO,iDAAP;AACA,OAAO,4DAAP;AACA,OAAO,sDAAP;;IAIMC,I;;;;;;;;;;;;;;;;;UACMC,M,GAASJ,KAAK,CAACK,SAAN,E;;;;;;6BAED;AACZ;AACA;AACA;AACA,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAxB;AACA,UAAMC,MAAW,GAAG;AAChBC,QAAAA,UAAU,EAAE,CACR;AAAEC,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,IAAI,EAAE;AAArB,SADQ,EAER;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAE;AAAtB,SAFQ,CADI;AAKhBC,QAAAA,QAAQ,EAAE,OALM;AAMhBC,QAAAA,SAAS,EAAER;AANK,OAApB;AAQA,UAAMS,OAAY,GAAG,CAEjB;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,SAAS,EAAE,MAA7B;AAAqCC,QAAAA,KAAK,EAAE;AAA5C,OAFiB,EAGjB;AAAEF,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,SAAS,EAAE,QAA7B;AAAuCE,QAAAA,KAAK,EAAE,QAA9C;AAAwDD,QAAAA,KAAK,EAAE;AAA/D,OAHiB,CAArB;AAOA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD,CACI;AACA;AAFJ;AAGI,QAAA,GAAG,EAAE,KAAKd,MAHd;AAII,QAAA,UAAU,EAAE,IAJhB;AAKI,QAAA,eAAe,EAAE,EALrB;AAMI,QAAA,cAAc,EAAE,IANpB;AAOI,QAAA,aAAa,EAAE,YAPnB;AAQI,QAAA,KAAK,EAAC,WARV;AASI,QAAA,QAAQ,EAAE,IATd;AAUI,QAAA,QAAQ,EAAE,EAVd;AAWI,QAAA,eAAe,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CAXrB;AAYI,QAAA,cAAc,EAAE,IAZpB;AAaI,QAAA,aAAa,EAAE,IAbnB;AAcI,QAAA,MAAM,EAAE,GAdZ;AAeI,QAAA,KAAK,EAAE,MAfX;AAemB,QAAA,MAAM,EAAE,IAAIF,GAAG,CAACkB,WAAR,CAAoBX,MAApB,CAf3B;AAewD,QAAA,OAAO,EAAEM,OAfjE;AAgBI,QAAA,aAAa,EAAE,IAhBnB;AAgByB,QAAA,QAAQ,EAAE,IAhBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAsBH;;;;EA7Ccf,KAAK,CAACqB,a;;AAgDzB,eAAelB,IAAf","sourcesContent":["import * as React from 'react';\r\nimport JqxGrid, { IGridProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxgrid';\r\nimport \"jqwidgets-scripts/jqwidgets/styles/jqx.base.css\";\r\nimport \"jqwidgets-scripts/jqwidgets/styles/jqx.material-purple.css\";\r\nimport \"jqwidgets-scripts/jqwidgets/styles/jqx.metrodark.css\";\r\n\r\n\r\n\r\nclass Type extends React.PureComponent<any, IGridProps> {\r\n    private myGrid = React.createRef<JqxGrid>();\r\n\r\n    public render() {\r\n        // const imagerenderer = (row: number, datafield: string, value: string): string => {\r\n        //     return '<img style=\"margin-left: 5px;\" alt=\"img null\" height=\"100%\" width=\"100%\" src=\"' + value + '\"/>';\r\n        // };\r\n        const data = this.props.Adata;\r\n        const source: any = {\r\n            datafields: [\r\n                { name: '_id', type: 'string' },\r\n                { name: 'type', type: 'string' },\r\n            ],\r\n            datatype: 'array',\r\n            localdata: data\r\n        };\r\n        const columns: any = [\r\n          \r\n            { text: 'length', datafield: 'leng', width: 55 },\r\n            { text: 'volumn', datafield: 'volumn', align: 'center', width: 200 }\r\n        ]\r\n\r\n\r\n        return (\r\n            <div>\r\n                <JqxGrid\r\n                    //rowsheight={60}\r\n                    // @ts-ignore\r\n                    ref={this.myGrid}\r\n                    filterable={true}\r\n                    statusbarheight={30}\r\n                    showaggregates={true}\r\n                    selectionmode={'singlecell'}\r\n                    theme=\"metrodark\"\r\n                    pageable={true}\r\n                    pagesize={20}\r\n                    pagesizeoptions={['10', '20', '30', '50', '100']}\r\n                    columnsreorder={true}\r\n                    showfilterrow={true}\r\n                    height={700}\r\n                    width={'100%'} source={new jqx.dataAdapter(source)} columns={columns}\r\n                    columnsresize={true} sortable={true} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Type;"]},"metadata":{},"sourceType":"module"}