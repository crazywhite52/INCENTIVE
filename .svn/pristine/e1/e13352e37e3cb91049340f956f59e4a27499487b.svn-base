{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work_Project\\\\ReactJs\\\\JIB-Quicktron\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work_Project\\\\ReactJs\\\\JIB-Quicktron\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work_Project\\\\ReactJs\\\\JIB-Quicktron\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work_Project\\\\ReactJs\\\\JIB-Quicktron\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work_Project\\\\ReactJs\\\\JIB-Quicktron\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Work_Project\\\\ReactJs\\\\JIB-Quicktron\\\\src\\\\components\\\\topAndSideNavigation.js\";\nimport React, { Component } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nvar TopAndSide =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TopAndSide, _Component);\n\n  function TopAndSide() {\n    _classCallCheck(this, TopAndSide);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TopAndSide).apply(this, arguments));\n  }\n\n  _createClass(TopAndSide, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"fixed\" // className={clsx(classes.appBar, {\n        //   [classes.appBarShift]: open,\n        // })}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"align-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Mini variant drawer\"))), React.createElement(Drawer, {\n        variant: \"permanent\" // className={clsx(classes.drawer, {\n        //   [classes.drawerOpen]: open,\n        //   [classes.drawerClose]: !open,\n        // })}\n        // classes={{\n        //   paper: clsx({\n        //     [classes.drawerOpen]: open,\n        //     [classes.drawerClose]: !open,\n        //   }),\n        // }}\n        ,\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"align-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TopAndSide;\n}(Component);\n\nexport { TopAndSide as default };","map":{"version":3,"sources":["D:\\Work_Project\\ReactJs\\JIB-Quicktron\\src\\components\\topAndSideNavigation.js"],"names":["React","Component","clsx","makeStyles","useTheme","Drawer","AppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","ListItem","ListItemIcon","ListItemText","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBIcon","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","TopAndSide"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SACIC,SADJ,EAEIC,cAFJ,EAGIC,YAHJ,EAIIC,gBAJJ,EAKIC,WALJ,EAMIC,UANJ,EAOIC,UAPJ,EAQIC,OARJ,EASIC,WATJ,EAUIC,iBAVJ,EAWIC,eAXJ,EAYIC,eAZJ,QAaS,UAbT;;IAgBqBC,U;;;;;;;;;;;;;6BACV;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACA,QAAA,QAAQ,EAAC,OADT,CAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CANA,CADF,EAcA,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXF;AAYE,QAAA,IAAI,EAAE,IAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAdF,CAdA,CADF;AAmCD;;;;EArCqC3B,S;;SAAnB2B,U","sourcesContent":["import React, { Component } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavbarToggler,\r\n    MDBCollapse,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBIcon,\r\n    MDBDropdown,\r\n    MDBDropdownToggle,\r\n    MDBDropdownMenu,\r\n    MDBDropdownItem\r\n  } from \"mdbreact\";\r\n\r\n\r\nexport default class TopAndSide extends Component {\r\n  render() {\r\n    return (\r\n      <div> \r\n        <AppBar\r\n        position=\"fixed\"\r\n        // className={clsx(classes.appBar, {\r\n        //   [classes.appBarShift]: open,\r\n        // })}\r\n      >\r\n        <Toolbar>\r\n            <MDBIcon icon=\"align-justify\" />\r\n          <Typography variant=\"h6\" noWrap>\r\n            Mini variant drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        // className={clsx(classes.drawer, {\r\n        //   [classes.drawerOpen]: open,\r\n        //   [classes.drawerClose]: !open,\r\n        // })}\r\n        // classes={{\r\n        //   paper: clsx({\r\n        //     [classes.drawerOpen]: open,\r\n        //     [classes.drawerClose]: !open,\r\n        //   }),\r\n        // }}\r\n        open={true}\r\n      >\r\n        <div >\r\n        <MDBIcon icon=\"align-justify\" />\r\n        </div>\r\n      </Drawer>\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}